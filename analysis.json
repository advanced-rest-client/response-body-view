{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element to display a HTTP response body.\n\nThe element will try to select best view for given `contentType`. It will\nchoose the JSON viewer for JSON response and XML viewer for XML responses.\nOtherise it will display a syntax hagligter.\n\nNote that the `contentType` property **must** be set in order to display any\nview.\n\n### Save content to file\n\nThe element uses the web way of file saving. However, it sends the\n`export-data` custom event first to check if hosting application implements\nother save functionality. See event description for more information.\n\n## Changes in version 2\n\n- Text search library is no longer included\n\n### Styling\n\n`<response-body-view>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--response-body-view-color` | Color applied to the element | `inherit`\n`--response-body-view-background-color` | Bg color applied to the element | `inherit`\n`--response-body-view-preview-background-color` | Bg color of the preview widow | `#fff`\n`--content-action-button-color` | Color of a button in the content actions bar | `rgba(0, 0, 0, 0.74)`\n`--content-action-button-color-hover` | Color of a button in the content actions bar when hovered | `--accent-color` or `rgba(0, 0, 0, 0.74)`\n`--content-action-button-color-active` | Color of a button in the content actions bar when active | `#BDBDBD`\n`--response-body-view-preview-close-background-color` | Bg color of the preview close icon | `#fff`\n`--response-body-view-preview-close-color` | Color of the preview close icon | `rgba(0,0,0,0.74)`",
      "summary": "",
      "path": "response-body-view.js",
      "properties": [
        {
          "name": "responseText",
          "type": "string | null | undefined",
          "description": "Raw response as a response text.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_responseTextChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "_raw",
          "type": "string | null | undefined",
          "description": "A variable to be set after the `responseText` change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "contentType",
          "type": "string | null | undefined",
          "description": "The response content type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "charset",
          "type": "string | null | undefined",
          "description": "Current value of charset encoding, if available.\nIt should be set to correctly decode buffer to string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 222,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "contentPreview",
          "type": "boolean | null | undefined",
          "description": "If true then the conent preview will be visible instead of the code view",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_contentPreviewChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isParsed",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the parsed view can be displayed.\nIf false then the syntax highligter will be removed from the DOM\nso it will not try to do the parsing job if it is not necessary.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 240,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isJson",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the JSON view can be displayed.\nIf false then the syntax highligter will be removed from the DOM\nso it will not try to do the parsing job if it is not necessary.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isXml",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the XML view can be displayed.\nIf false then the syntax highligter will be removed from the DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 259,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "activeView",
          "type": "number | null | undefined",
          "description": "Selected view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 6
            },
            "end": {
              "line": 263,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "downloadFileUrl",
          "type": "string | null | undefined",
          "description": "When saving a file this will be the download URL created by the\n`URL.createObjectURL` function.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 6
            },
            "end": {
              "line": 271,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "downloadFileName",
          "type": "string | null | undefined",
          "description": "Autogenerated file name for the download file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 278,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "rawTextWrap",
          "type": "boolean | null | undefined",
          "description": "Is true then the text in \"raw\" preview will be wrapped.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 6
            },
            "end": {
              "line": 280,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "rawView",
          "type": "boolean | null | undefined",
          "description": "If set it opens the \"raw\" view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_toggleViewSource\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "jsonTableView",
          "type": "boolean | null | undefined",
          "description": "If set it opens the JSON table view.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 290,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_jsonTableViewChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasData",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `contentType` and `_raw` are set",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 6
            },
            "end": {
              "line": 296,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "prismTimeout",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 6
            },
            "end": {
              "line": 301,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onPrismHighlightTimeout\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasLocalStorage",
          "type": "boolean | null | undefined",
          "description": "True if current environment has localStorage suppport.\nChrome apps do not have localStorage property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 347,
              "column": 2
            },
            "end": {
              "line": 355,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onPrismHighlightTimeout",
          "description": "Handler for `prismTimeout` property change.\nDisplays \"raw\" view instead of syntax highlighting.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 2
            },
            "end": {
              "line": 373,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_responseTextChanged",
          "description": "Set's `_raw` property that it propagated to current viewer.\nThe operation is async for performance reasons.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 2
            },
            "end": {
              "line": 397,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasData",
          "description": "Computes value for `hasData` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 2
            },
            "end": {
              "line": 402,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "contentType"
            },
            {
              "name": "_raw"
            }
          ]
        },
        {
          "name": "_contentTypeChanged",
          "description": "Updates `activeView` property based on `contentType` value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 408,
              "column": 2
            },
            "end": {
              "line": 431,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "contentType",
              "type": "?String",
              "description": "Current content type of the response"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_ensureJsonTable",
          "description": "When response's content type is JSON the view renders the\nJSON table element. This function reads current state for the table\n(if it is turned on) and handles view change if needed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 437,
              "column": 2
            },
            "end": {
              "line": 450,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_contentPreviewChanged",
          "description": "Handler for `this.contentPreview` change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 452,
              "column": 2
            },
            "end": {
              "line": 458,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getRawContent",
          "description": "The component may work in Electron app where Buffer can be returned from\nthe transport library. This ensures that string is always returned.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 464,
              "column": 2
            },
            "end": {
              "line": 481,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "String value of `_raw` property"
          }
        },
        {
          "name": "_openResponsePreview",
          "description": "Opens response preview in new layer",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 2
            },
            "end": {
              "line": 505,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeResponsePreview",
          "description": "Closes response preview",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 2
            },
            "end": {
              "line": 511,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizePreviewWindow",
          "description": "Sets height for the preview iframe",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 517,
              "column": 2
            },
            "end": {
              "line": 523,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "height",
              "type": "?Number"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_copyToClipboard",
          "description": "Coppies current response text value to clipboard.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 529,
              "column": 2
            },
            "end": {
              "line": 538,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetCopyButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 540,
              "column": 2
            },
            "end": {
              "line": 542,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "button"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveFile",
          "description": "Fires the `export-data` custom event. If the event is not canceled\nthen it will use default web implementation for file saving.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 565,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "saveToFile",
          "description": "Creates a file object form current response text and opens a dialog\nwith the link to a file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 570,
              "column": 2
            },
            "end": {
              "line": 588,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_downloadIconTap",
          "description": "Handler for download link click to prevent default and close the dialog.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 590,
              "column": 2
            },
            "end": {
              "line": 594,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_downloadDialogClose",
          "description": "Handler for file download dialog close.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 596,
              "column": 2
            },
            "end": {
              "line": 600,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleViewSource",
          "description": "Toggles \"view source\" or raw message view.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 606,
              "column": 2
            },
            "end": {
              "line": 625,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_jsonTableViewChanged",
          "description": "Handler for the `jsonTableView` property change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 2
            },
            "end": {
              "line": 652,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "state"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onStorageChanged",
          "description": "Updates the value of the `jsonTableView` property when the\ncorresponding localStorage property change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 659,
              "column": 2
            },
            "end": {
              "line": 672,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "StorageEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_localStorageValueToBoolean",
          "description": "Reads the local value (always a string) as a boolean value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 679,
              "column": 2
            },
            "end": {
              "line": 689,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "The value read from the local storage."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "Boolean value read from the value."
          }
        },
        {
          "name": "_onJsonTableStateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 691,
              "column": 2
            },
            "end": {
              "line": 701,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "closePreview",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 703,
              "column": 2
            },
            "end": {
              "line": 705,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeRenderWithRaw",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 707,
              "column": 2
            },
            "end": {
              "line": 709,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeView"
            }
          ]
        },
        {
          "name": "_computeRenderShowRaw",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 711,
              "column": 2
            },
            "end": {
              "line": 713,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeView"
            }
          ]
        },
        {
          "name": "_computeRenderPreviewResponse",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 715,
              "column": 2
            },
            "end": {
              "line": 717,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeView"
            }
          ]
        },
        {
          "name": "_computeRenderToggleTable",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 719,
              "column": 2
            },
            "end": {
              "line": 721,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "activeView"
            }
          ]
        },
        {
          "name": "_computeRenderJsonTable",
          "description": "Computes boolean value whether to render the JSON table element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 729,
              "column": 2
            },
            "end": {
              "line": 731,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isJson",
              "type": "Boolean"
            },
            {
              "name": "jsonTableView",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 67,
          "column": 7
        },
        "end": {
          "line": 752,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.ResponseBodyView",
      "attributes": [
        {
          "name": "response-text",
          "description": "Raw response as a response text.",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 6
            },
            "end": {
              "line": 211,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "content-type",
          "description": "The response content type.",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 25
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "charset",
          "description": "Current value of charset encoding, if available.\nIt should be set to correctly decode buffer to string",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 6
            },
            "end": {
              "line": 222,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "content-preview",
          "description": "If true then the conent preview will be visible instead of the code view",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-parsed",
          "description": "Computed value, true if the parsed view can be displayed.\nIf false then the syntax highligter will be removed from the DOM\nso it will not try to do the parsing job if it is not necessary.",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 240,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-json",
          "description": "Computed value, true if the JSON view can be displayed.\nIf false then the syntax highligter will be removed from the DOM\nso it will not try to do the parsing job if it is not necessary.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-xml",
          "description": "Computed value, true if the XML view can be displayed.\nIf false then the syntax highligter will be removed from the DOM",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 259,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "active-view",
          "description": "Selected view.",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 6
            },
            "end": {
              "line": 263,
              "column": 24
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "download-file-url",
          "description": "When saving a file this will be the download URL created by the\n`URL.createObjectURL` function.",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 6
            },
            "end": {
              "line": 271,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "download-file-name",
          "description": "Autogenerated file name for the download file.",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 278,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "raw-text-wrap",
          "description": "Is true then the text in \"raw\" preview will be wrapped.",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 6
            },
            "end": {
              "line": 280,
              "column": 26
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "raw-view",
          "description": "If set it opens the \"raw\" view.",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "json-table-view",
          "description": "If set it opens the JSON table view.",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 290,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-data",
          "description": "Computed value, true if `contentType` and `_raw` are set",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 6
            },
            "end": {
              "line": 296,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "prism-timeout",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 6
            },
            "end": {
              "line": 301,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-local-storage",
          "description": "True if current environment has localStorage suppport.\nChrome apps do not have localStorage property.",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 323,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "export-data",
          "description": "Fired when the element request to export data outside the application.\n\nApplication can handle this event if it support native UX of file saving.\nIn this case this event must be canceled by calling `preventDefault()`\non it. If the event is not canceled then save to file dialog appears\nwith a regular download link.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "json-table-state-changed",
          "description": "Fired when the `jsonTableView` property change to inform other\nelements to switch corresponding view as well.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "response-body-view"
    }
  ]
}
